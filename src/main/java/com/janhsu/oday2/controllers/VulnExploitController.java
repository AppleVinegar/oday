package com.janhsu.oday2.controllers;

import com.janhsu.oday2.entity.ConnResult;
import com.janhsu.oday2.entity.VulnExploitInfo;
import com.janhsu.oday2.utils.Loading;
import com.janhsu.oday2.utils.ProcessHttp;
import com.janhsu.oday2.utils.VulnScanUtils;
import javafx.scene.control.TextArea;
import javafx.stage.Stage;

import java.util.HashMap;

public class VulnExploitController {
    VulnExploitInfo vulnExploitInfo = new VulnExploitInfo();
    HashMap<String,String> headers = new HashMap<>();
    String rceParam = "";
    String resultText = ">>利用结果<<\n";

    public void vulnExploit(VulnExploitInfo vulnExploitInfo, String exploitMethod, String appendHeaders,String cmd, String url, Stage mainStage, TextArea textArea){
        this.vulnExploitInfo = vulnExploitInfo;
        String headerText = "";
        if (vulnExploitInfo.getExpHeaders()!=null&&vulnExploitInfo.getExpHeaders().length()!=0){
            headerText+=vulnExploitInfo.getExpHeaders()+"~";
        }
        if (appendHeaders!=null&&appendHeaders.length()!=0){
            headerText+=appendHeaders;
        }
        if (headerText.length()!=0){
            headers =new VulnScanUtils().handleParams(headerText);
        }
        Loading loading = new Loading(mainStage,"利用中");
        loading.show();//加载动画开启
        new Thread(() -> {
            try {
                if (exploitMethod.equals("FileUpload")){
                    sendRequest(url,this.vulnExploitInfo.getExpParam());
                }
                else if (exploitMethod.equals("RCE")){
                    if(cmd!=null&&cmd.length()!=0){//某些rce不在post包内输入命令,如蓝凌，所以判断CMD输入是否为空
                        rceParam = String.format(this.vulnExploitInfo.getRceParam(),cmd);
                        sendRequest(url,rceParam);
                    }
                    else {
                        sendRequest(url,this.vulnExploitInfo.getExpParam());
                    }
                }
                textArea.setText(resultText);
            } catch (Exception e) {
                e.printStackTrace();// 3
            } finally {
                loading.closeStage();// 4
                textArea.setStyle("-fx-text-fill:grey;");
                textArea.setText(resultText);
            }
        }).start();

    }

    public void sendRequest(String url,String reqParam){
        ConnResult connResult = new ConnResult();
        switch (this.vulnExploitInfo.getExpMethod()){
            case "POST":
                connResult = new ProcessHttp().sendPost(url,this.vulnExploitInfo.getExpPath(),
                        this.vulnExploitInfo.getExpCt(),
                        headers,
                        reqParam);
                break;
            case "GET":
                connResult  = new ProcessHttp().sendGet(url,this.vulnExploitInfo.getExpPath(),
                        reqParam,
                        headers);
                break;
            case "PUT":
                connResult = new ProcessHttp().sendPut(url,this.vulnExploitInfo.getExpPath(),
                        this.vulnExploitInfo.getExpCt(),
                        headers,
                        reqParam);
                break;
        }
        this.resultText+=(">>返回状态码:"+connResult.getStatusCode()+"\n");
        this.resultText+=(">>返回Header:\n"+connResult.getResHeaders());
        this.resultText+=(">>返回包:\n"+connResult.getResBody()+"\n");
    }
}
